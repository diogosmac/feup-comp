/* Generated By:JJTree: Do not edit this line. ASTImport.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTImport extends SimpleNode {
  public boolean isStatic = false;
  public String importId;
  public boolean isMethod = false;
  public String methodId;

  public ASTImport(int id) {
    super(id);
  }

  public ASTImport(Parser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(ParserVisitor visitor, Object data) {

    return
    visitor.visit(this, data);
  }

  public String toString() {
    String out = "Import: " + (isStatic ? "static " : "") + importId;
    if (isMethod) {
      out += "." + methodId;
    }
    return out;
  }

  public String descriptorId() {
    return importId +  "." + methodId;
  }

  //Returns the methodId if importing a method; Returns the name of the class otherwise
  @Override
  public Object jjtGetValue() {
    return (isMethod ? descriptorId() : importId);
  }
}
/* JavaCC - OriginalChecksum=ad451325add5ecfc5390566322bf51e8 (do not edit this line) */
